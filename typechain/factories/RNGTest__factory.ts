/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RNGTest } from "../RNGTest";

export class RNGTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(rngAddr: string, overrides?: Overrides): Promise<RNGTest> {
    return super.deploy(rngAddr, overrides || {}) as Promise<RNGTest>;
  }
  getDeployTransaction(
    rngAddr: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(rngAddr, overrides || {});
  }
  attach(address: string): RNGTest {
    return super.attach(address) as RNGTest;
  }
  connect(signer: Signer): RNGTest__factory {
    return super.connect(signer) as RNGTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RNGTest {
    return new Contract(address, _abi, signerOrProvider) as RNGTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rngAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    name: "generate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "number",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b506040516101f33803806101f383398101604081905261003491610059565b600080546001600160a01b0319166001600160a01b0392909216919091179055610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b61015b806100986000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a7dd5231461003b5780638381f58a14610060575b600080fd5b61004e6100493660046100f3565b610069565b60405190815260200160405180910390f35b61004e60015481565b60008054604051632181b83f60e11b8152600481018490526001600160a01b0390911690634303707e90602401602060405180830381600087803b1580156100b057600080fd5b505af11580156100c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e8919061010c565b600181905592915050565b60006020828403121561010557600080fd5b5035919050565b60006020828403121561011e57600080fd5b505191905056fea2646970667358221220aa4747d2a63ffbd840e02a6807d9a0f0ca93993d3b39fd5bdc1c11b090e3748664736f6c63430008050033";
